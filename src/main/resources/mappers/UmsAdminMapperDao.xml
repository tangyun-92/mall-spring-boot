<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tang.mall.dao.UmsAdminMapperDao">
  <resultMap id="BaseResultMap" type="com.tang.mall.mbg.model.UmsAdmin">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, `password`, icon, email, nick_name, note, create_time, login_time, 
    `status`
  </sql>
  <select id="selectByName" resultMap="BaseResultMap" parameterType="java.lang.String">
    select <include refid="Base_Column_List" />
    from ums_admin
    where username = #{username, jdbcType=VARCHAR}
  </select>
  <select id="selectList" parameterType="com.tang.mall.dto.UmsAdminListParam"
          resultType="com.tang.mall.vo.UmsAdminVO">
    select
           a.id,
           a.username,
           a.icon,
           a.email,
           a.nick_name as nickName,
           a.note,
           a.create_time as createName,
           a.login_time as loginTime,
           a.`status`,
           r.`name` as roleName,
           r.id as roleId
    from ums_admin as a
    left join ums_admin_role_relation as ar on ar.admin_id = a.id
    left join ums_role as r on r.id = ar.role_id
    <where>
      <if test="query.username != null">
        and username like #{query.username}
      </if>
      <if test="query.nickName != null">
        and nick_name like #{query.nickName}
      </if>
      <if test="query.status != null">
        and status = #{query.status}
      </if>
    </where>
  </select>
  <delete id="batchDelete">
    delete from ums_admin
    where id in
    <foreach collection="ids" close=")" item="id" open="(" separator=",">
      #{id}
    </foreach>
  </delete>
</mapper>